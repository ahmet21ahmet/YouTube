# İş akışının adı
name: Update IPTV Playlist

# Bu iş akışını neyin tetikleyeceğini belirler
on:
  # 1. Zamanlanmış olarak çalıştır (cron job)
  # Bu örnek her 6 saatte bir çalışır. Günde bir kez çalıştırmak için '0 0 * * *' kullanabilirsiniz.
  schedule:
    - cron: '0 */6 * * *'

  # 2. GitHub arayüzünden manuel olarak çalıştırmaya izin ver
  workflow_dispatch:

  # 3. 'main' branch'ine her push yapıldığında çalıştır
  # Bu, config.yml dosyasını güncellediğinizde listenin anında yenilenmesini sağlar.
  push:
    branches:
      - main

jobs:
  update-playlist:
    # İşin çalışacağı sanal makine türü
    runs-on: ubuntu-latest

    steps:
      # 1. Adım: Depodaki kodları sanal makineye indirir
      - name: Check out repository
        uses: actions/checkout@v4

      # 2. Adım: Python 3.x ortamını kurar
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      # 3. Adım: Gerekli Python kütüphanelerini yükler
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pyyaml

      # 4. Adım: Python betiğimizi çalıştırarak listeyi dönüştürür
      - name: Run the conversion script
        run: python iptv_converter.py

      # 5. Adım: Oluşturulan yeni dosyayı depoya geri commit'ler
      # Eğer betik çalıştıktan sonra 'donusturulmus_liste.m3u8' dosyasında bir değişiklik
      # varsa, bu değişiklikler depoya otomatik olarak gönderilir.
      - name: Commit and push if there are changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: Otomatik IPTV listesi güncellemesi"
          file_pattern: "donusturulmus_liste.m3u8" # Sadece bu dosyadaki değişiklikleri kontrol et
          commit_user_name: "GitHub Actions Bot"
          commit_user_email: "actions@github.com"
          commit_author: "GitHub Actions Bot <actions@github.com>"
